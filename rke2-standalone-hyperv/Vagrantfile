$windows_rke2_script = <<-SCRIPT
    Set-MpPreference -DisableRealtimeMonitoring $true -DisableScriptScanning $true -DisableArchiveScanning $true -ExclusionPath c:\\var\\lib\\rancher\\rke2\\bin,c:\\usr\\local\\bin
    Set-NetFirewallProfile -Profile Domain,Public,Private -Enabled False

    Write-Host "Downloading RKE2 installer for Windows..."
    Invoke-WebRequest -Uri https://raw.githubusercontent.com/rancher/rke2/master/install.ps1 -Outfile install.ps1

    Write-Host "Creating RKE2 configuration..."
    $token = Get-Content C:/sync/token
    $server = Get-Content C:/sync/server
    New-Item -Type Directory C:/etc/rancher/rke2 -Force
    Set-Content -Path C:/etc/rancher/rke2/config.yaml -Value @"
server: https://$($server):9345
token: $($token)
kube-proxy-arg: "feature-gates=IPv6DualStack=false"
"@

    Write-Host "Creating RKE2 environment variables..."
    $env:PATH+=";C:\\var\\lib\\rancher\\rke2\\bin;c:\\usr\\local\\bin"
    [Environment]::SetEnvironmentVariable("Path",
        [Environment]::GetEnvironmentVariable("Path", [EnvironmentVariableTarget]::Machine) + ";C:\\var\\lib\\rancher\\rke2\\bin;c:\\usr\\local\\bin",
        [EnvironmentVariableTarget]::Machine)

    Write-Host "Installing RKE2 as an agent..."
    ./install.ps1 -Version v1.22.4+rke2r2

    Write-Host "Starting RKE2 Windows Service..."
    Push-Location c:\\usr\\local\\bin
    rke2.exe agent service --add
    Pop-Location
    Start-Sleep -s 5
    Start-Service -Name "rke2"

    exit 0
SCRIPT

# Vagrant.configure(2) do |config|
#   # Need this to reboot Windows after enabling Containers feature.
#   config.vagrant.plugins = ["vagrant-reload"]

#   config.vm.network "private_network", bridge: "Default Switch"
#   config.vm.define :main2 do |main2|
#     main2.vm.host_name = "main2"
#     main2.vm.box = "hashicorp/bionic64"
#     main2.vm.provider :hyperv do |hv|
#       hv.memory = 4096
#       hv.cpus = 2
#     end

#     main2.vm.synced_folder "./sync", "/var/sync", smb_username: ENV['SMB_USERNAME'], smb_password: ENV['SMB_PASSWORD']
#   end
# end

Vagrant.configure(2) do |config|
    # Need this to reboot Windows after enabling Containers feature.
    config.vagrant.plugins = ["vagrant-reload"]

    config.vm.network "private_network", bridge: "Default Switch"
    config.vm.define :main do |main|
      main.vm.host_name = "main"
      main.vm.box = "hashicorp/bionic64"
      main.vm.provider :hyperv do |hv|
        hv.memory = 4096
        hv.cpus = 2
      end

      main.vm.synced_folder "./sync", "/var/sync", smb_username: ENV['SMB_USERNAME'], smb_password: ENV['SMB_PASSWORD']
      main.vm.provision :shell, privileged: true, inline: <<-SHELL
          #! /bin/bash
          set -e

          curl -sfL https://get.rke2.io | INSTALL_RKE2_VERSION="v1.22.4+rke2r2" sh -

          echo "[INFO] Setting up environment variables...."
          touch /etc/profile.d/rancher.sh
          echo "export KUBECONFIG=/etc/rancher/rke2/rke2.yaml" >> /etc/profile.d/rancher.sh
          export KUBECONFIG=/etc/rancher/rke2/rke2.yaml
          echo "export PATH=$PATH:/var/lib/rancher/rke2/bin" >> /etc/profile.d/rancher.sh
          export PATH=$PATH:/var/lib/rancher/rke2/bin
          echo "RKE2_CNI=calico" >> /usr/local/lib/systemd/system/rke2-server.env

          echo "[INFO] Starting RKE2 service...."
          systemctl enable rke2-server.service
          systemctl start rke2-server.service

          echo "[INFO] Waiting for RKE2 to be ready...."
          while [ ! -f /var/lib/rancher/rke2/server/node-token ]; do sleep 2; done;
          crictl config --set runtime-endpoint=unix:///run/k3s/containerd/containerd.sock
          chmod a=r /etc/rancher/rke2/rke2.yaml

          echo "[INFO] Waiting for Calico to be ready...."
          curl -o /usr/local/bin/calicoctl -sOL https://github.com/projectcalico/calicoctl/releases/download/v3.20.2/calicoctl
          chmod +x /usr/local/bin/calicoctl
          until calicoctl get felixConfiguration default | grep -q "default"; do sleep 2; echo "Waiting...."; done;
          calicoctl ipam configure --strictaffinity=true

          echo "[INFO] RKE2 installation is complete...."
          # Vagrant Specific Settings
          rm -f /var/sync/token
          rm -f /var/sync/server
          cat /var/lib/rancher/rke2/server/node-token > /var/sync/token
          hostname -I | xargs > /var/sync/server
          cat /etc/rancher/rke2/rke2.yaml > /var/sync/config
      SHELL
    end

    config.vm.define :linuxworker do |linuxworker|
      linuxworker.vm.host_name = "linuxworker"
      linuxworker.vm.box = "hashicorp/bionic64"
      linuxworker.vm.provider :hyperv do |hv|
        hv.linked_clone = true
        hv.memory = 4096
        hv.cpus = 2
      end

      linuxworker.vm.synced_folder "./sync", "/var/sync", smb_username: ENV['SMB_USERNAME'], smb_password: ENV['SMB_PASSWORD']

      linuxworker.vm.provision :shell, privileged: true, inline: <<-SHELL
          curl -sfL https://get.rke2.io | INSTALL_RKE2_TYPE="agent" INSTALL_RKE2_VERSION="v1.22.4+rke2r2" sh -
          systemctl enable rke2-agent.service
          mkdir -p /etc/rancher/rke2/
          touch /etc/rancher/rke2/config.yaml
          echo "server: https://$(cat /var/sync/server):9345" >> /etc/rancher/rke2/config.yaml
          echo "token: $(cat /var/sync/token)" >> /etc/rancher/rke2/config.yaml
          systemctl start rke2-agent.service
      SHELL
    end

    config.vm.define :winworker do |winworker|
      winworker.vm.host_name = "winworker"
      winworker.vm.box = "jborean93/WindowsServer2019"
      winworker.vm.provider :hyperv do |hv, override|
        hv.linked_clone = true
        hv.memory = 4096
        hv.cpus = 2
        override.vm.boot_timeout = 600
      end

      winworker.vm.synced_folder "./sync", "c:\\sync", smb_username: ENV['SMB_USERNAME'], smb_password: ENV['SMB_PASSWORD']
      winworker.vm.provision :shell, privileged: true, inline: "Install-WindowsFeature -Name Containers"
      winworker.vm.provision :reload
      winworker.vm.provision :shell, privileged: true, inline: $windows_rke2_script
    end

    config.vm.define :winworker22 do |winworker22|
      winworker22.vm.host_name = "winworker22"
      winworker22.vm.box = "jborean93/WindowsServer2022 "
      winworker22.vm.provider :hyperv do |hv, override|
        hv.linked_clone = true
        hv.memory = 4096
        hv.cpus = 2
        override.vm.boot_timeout = 600
      end

      winworker22.vm.synced_folder "./sync", "c:\\sync", smb_username: ENV['SMB_USERNAME'], smb_password: ENV['SMB_PASSWORD']
      winworker22.vm.provision :shell, privileged: true, inline: "Install-WindowsFeature -Name Containers"
      winworker22.vm.provision :reload
      winworker22.vm.provision :shell, privileged: true, inline: $windows_rke2_script
    end
end
